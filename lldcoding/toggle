import React, { useState } from 'react';

// ToggleButton Component: A reusable button that can be toggled between ON and OFF states.
const ToggleButton = ({ initialOn = false, label = "Toggle Feature" }) => {
  // Use useState hook to manage the 'isOn' state of the button.
  // 'isOn' is a boolean that determines if the toggle is currently active (ON) or inactive (OFF).
  const [isOn, setIsOn] = useState(initialOn);

  // Function to handle the click event on the toggle switch.
  // It flips the current 'isOn' state.
  const handleClick = () => {
    setIsOn(!isOn);
    // In a real application, you might also call a prop function here
    // to notify a parent component about the state change, e.g., onToggle(id, !isOn);
  };

  return (
    <div className="toggle-wrapper">
      {/* Label for the toggle switch */}
      <span className="toggle-label">{label}:</span>

      {/* The toggle switch container */}
      <button
        role="switch" // ARIA role for accessibility
        aria-checked={isOn} // ARIA state for accessibility
        onClick={handleClick}
        // Apply base class and a conditional class for the 'on' state
        className={`toggle-switch ${isOn ? 'toggle-switch--on' : ''}`}
      >
        {/* The toggle "thumb" (the movable circle) */}
        {/* Apply base class and a conditional class for the 'on' state */}
        <span
          className={`toggle-thumb ${isOn ? 'toggle-thumb--on' : ''}`}
        ></span>

        {/* Text labels for ON/OFF states */}
        <span
          className={`toggle-text toggle-text--off ${isOn ? 'toggle-text--hidden' : ''}`}
        >
          OFF
        </span>
        <span
          className={`toggle-text toggle-text--on ${isOn ? '' : 'toggle-text--hidden'}`}
        >
          ON
        </span>
      </button>
    </div>
  );
};

// Main App component to demonstrate a single ToggleButton.
const App = () => {
  return (
    <div className="single-toggle-container">
      {/* Define the CSS styles directly within the component */}
      <style>
        {`
        /* Container for the single toggle button */
        .single-toggle-container {
          min-height: 100vh;
          background: linear-gradient(to bottom right, #3b82f6, #8b5cf6); /* from-blue-500 to-purple-600 */
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 1rem; /* p-4 */
        }

        /* Styles for the ToggleButton component */
        .toggle-wrapper {
          display: flex;
          align-items: center;
          gap: 0.75rem; /* space-x-3 */
          background-color: white; /* Added background for the single button */
          padding: 2rem; /* Added padding */
          border-radius: 0.75rem; /* Added rounded corners */
          box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); /* Added shadow */
        }

        .toggle-label {
          color: #4b5563; /* text-gray-700 */
          font-weight: 500; /* font-medium */
        }

        .toggle-switch {
          position: relative;
          display: flex;
          align-items: center;
          width: 4rem; /* w-16 */
          height: 2rem; /* h-8 */
          border-radius: 9999px; /* rounded-full */
          cursor: pointer;
          background-color: #d1d5db; /* bg-gray-300 */
          transition: background-color 0.3s ease-in-out;
          border: none; /* Remove default button border */
          outline: none; /* Remove default button outline */
        }

        .toggle-switch:focus {
          box-shadow: 0 0 0 2px #ffffff, 0 0 0 4px #3b82f6; /* focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 */
        }

        .toggle-switch--on {
          background-color: #22c55e; /* bg-green-500 */
        }

        .toggle-thumb {
          position: absolute;
          width: 1.5rem; /* w-6 */
          height: 1.5rem; /* h-6 */
          background-color: white;
          border-radius: 9999px; /* rounded-full */
          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); /* shadow-md */
          transform: translateX(0.25rem); /* translate-x-1 */
          transition: transform 0.3s ease-in-out;
        }

        .toggle-thumb--on {
          transform: translateX(2rem); /* translate-x-8 */
        }

        .toggle-text {
          position: absolute;
          font-size: 0.75rem; /* text-xs */
          font-weight: 700; /* font-bold */
          transition: opacity 0.3s ease-in-out;
        }

        .toggle-text--off {
          left: 0.5rem; /* left-2 */
          color: #4b5563; /* text-gray-600 */
          opacity: 1;
        }

        .toggle-text--on {
          right: 0.5rem; /* right-2 */
          color: white; /* text-white */
          opacity: 0;
        }

        .toggle-text--hidden {
          opacity: 0;
        }
        `}
      </style>

      {/* Render only one ToggleButton directly */}
      <ToggleButton label="Feature Toggle" initialOn={true} />
    </div>
  );
};

export default App;
